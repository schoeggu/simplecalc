TODOS:
gui
include f端r files
file support besser
conditional, loop, bool, etc
unit tests
system tests
bessere clients
const und var unterscheidung
cmake files 端berarbeiten
visitor?

zum teil erledigt:
output besser (funktion mit , und so ) (evtl mit printer klasse)
konstanten (PI, e, ...)
commands
excpetions
driver api besser machen

erledigt:
(done) makefile mit libs und subdirectories schoner machen
(done) var auflistung
(done) func auflistung



============================================================================


Interpreter:
           erstellt ein tree.
 Scanner --------------------------> expression
 Parser                         expression   expression 
  |                                   |                                 
  | term/resultat                     | funktionen
  v            set var/func           | variablen
 Driver --------------------------> Context
      \                               
  |      \
  |        \
terminput   \> resultat
setvar     
setfunc


cutsom functions:

func1(A,B,C)=A+B+C
func1: name
A:par1
B:par2
C:par3
A+B+C:expr

     function <>-------functionexpr
            
    /         \
   /           \
customfunc    cfunc

f端r eval von expr brauchts local context

local context wird bei eval von func1 gesetzt und hat die A, B, C als von aufrufparameter als vars gespeichert

daf端r braucht context einen parent den er bei nichtfinden aufrufen kann...
global context hat keinen parent



neu:



         term>
Driver <========> interpreter
       <command

         command>
Driver <========> history
        <command

        func/var>
Driver <========> context
        <func/var


Command:
calc
listvars/funcs
add/set/remove var/func

commmand:
execute, undo, redo
